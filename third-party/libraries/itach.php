<?php

/*
 * itach api id: 057d6b19-5f2c-4deb-bd7c-31f659caaf4e
 * for web interface: https://irdatabase.globalcache.com
 * https://irdatabase.globalcache.com/api/v1/057d6b19-5f2c-4deb-bd7c-31f659caaf4e/manufacturers
 */

class itach {

  static $timeout = 6;
  static $base_url = 'http://192.168.1.70/api/v1/';
  static $info = array();
  static $fp = NULL;
  static $code_id = 1;
  static $powering_on_tv = FALSE;
  static $reset_matrix_count = 0;
  static $special_count_check_min = 1;
  static $debug = TRUE;

  static function init_fp() {
    if (empty(self::$fp)) {
      self::$fp = stream_socket_client("tcp://192.168.1.70:4998", $errno, $errstr, 30);
      if ($errno) {
        print $errno . '::ERRROR""' . $errstr . PHP_EOL;
      }
      stream_set_blocking(self::$fp, 0);
    }
    return self::$fp;
  }

  static function send_signal($remote_code, $signal) {
    $zone = self::$remotes[$remote_code]['zone'];
    $output_index = isset(gefen_8x8_matrix::$outputs[$zone]) ? gefen_8x8_matrix::$outputs[$zone] : NULL;
    $input_index = isset(gefen_8x8_matrix::$state[$output_index]) ? gefen_8x8_matrix::$state[$output_index] : NULL;
    //itach::l(print_r(self::$remote_codes, TRUE));
    if('80inch' == $zone){
      //print 'INPUT INDEX: ' . $input_index . PHP_EOL;
      if(4 == $input_index && denon::$power_on){
        if('tv_volume_up' == $signal){
          $signal = 'aux_volume_up';
        }elseif('tv_volume_down' == $signal){
          $signal = 'aux_volume_down';
        }
      }
    }
    $tv_on = TRUE;
    $is_special = preg_match('`^(cable_help)`', $signal);

    if ($is_special) {
      //itach::l('SPEcIAL START: ' . $remote_code);
      self::$remotes[$remote_code]['special-counter'] = 0;
      self::$remotes[$remote_code]['special-buffer'] = array();
    } else {
      if (self::$remotes[$remote_code]['special-counter'] < self::$special_count_check_min) {
        //echo '>-->>>>>>---->>>combine special signal:' . $remote_code . '::' . $signal . PHP_EOL;
        self::$remotes[$remote_code]['special-buffer'][] = $signal;
      } else {
        //itach::l('_________________________ITACH PROCESS SIGNAL:' . $remote_code . ':' . $signal . ':' . $zone);

        $is_cable = preg_match('`^cable`', $signal);
        $is_tv = preg_match('`^tv`', $signal);
        $is_aux = preg_match('`^aux`', $signal);

        if ($is_cable) {
          self::process_cable_signal($zone, $output_index, $input_index, $signal);
          //self::itach_send_signal($port, $signal);
        } elseif ($is_tv) {
          self::process_tv_signal($zone, $output_index, $input_index, $signal);
       
        } elseif ($is_aux) {
          self::process_aux_signal($signal);
        }
      }
    }
  }

  static function process_cable_signal($zone, $output_index, $input_index, $signal) {
    $port = (8 == $input_index) ? 2 : 1; // co cable port 2 else port 1
    //itach::l('zone: ' . $zone . ':__CABLE_PORT::::' . $port . 'SIGNAL:' . $signal);
    self::itach_send_signal($port, $signal);
  }

  static function process_tv_signal($zone, $output_index, $input_index, $signal) {
    $tv_prefix = NULL;
    switch ($zone) {
      case '80inch':
        $tv_prefix = '0';
        $port = 1;
        break;
      case 'bedroom':
        $tv_prefix = '1';
        $port = 2;
        break;
      case 'workout':
        $tv_prefix = '2';
        $port = 3;

        break;
    }
    
    $is_volume_up_down = preg_match('`^(tv_volume_up|tv_volume_down)`', $signal);
    $signal_repeat_count = $is_volume_up_down ? 3 : 1;
    
    
    //itach::l('process_TV_signal:' . $zone . '::' . $output_index . '::' . $input_index . '::' . $signal . '::' . ':::' . $tv_prefix);
    if (!is_null($tv_prefix)) {
      $tv_signal = $tv_prefix . '_' . $signal;
      if (isset(self::$ir_codes[$tv_signal])) {
        //itach::l('SEND TV SIG:' . $signal_repeat_count);
        for ($c = 0; $c < $signal_repeat_count; $c++) {
          self::itach_send_signal($port, $tv_signal);
          if($signal_repeat_count > 1 && $c < ($signal_repeat_count-1)){
            usleep(90000);
            //itach::l('REPEAT|REPEAT|SEND TV SIG:' . $signal_repeat_count);
          }
        }
      } else {
        itach::l('NOT TV SIG SET:' . $tv_signal);
      }
    }
  }
  
  static function process_aux_signal($signal = NULL) {
    switch ($signal) {
      case 'aux_power':
        denon::toggle_power();
        break;
      case 'aux_volume_up':
        denon::volume_up();
        break;
      case 'aux_volume_down':
        denon::volume_down();
        break;
      case 'aux_1':
        denon::toggle_power(TRUE);
        denon::set_sat_cbl();
        gefen_8x8_matrix::route(gefen_8x8_matrix::$inputs['kb_cable'], denon::$denon_output_index);
        gefen_8x8_matrix::route(gefen_8x8_matrix::$inputs['denon_in'], gefen_8x8_matrix::$outputs['80inch']);
        break;
      case 'aux_2':
        denon::toggle_power(TRUE);
        denon::set_sat_cbl();
        gefen_8x8_matrix::route(gefen_8x8_matrix::$inputs['co_cable'], denon::$denon_output_index);
        gefen_8x8_matrix::route(gefen_8x8_matrix::$inputs['denon_in'], gefen_8x8_matrix::$outputs['80inch']);
        break;
      case 'aux_3':
        denon::toggle_power(TRUE);
        denon::set_sat_cbl();
        gefen_8x8_matrix::route(gefen_8x8_matrix::$inputs['kb_mac'], denon::$denon_output_index);
        gefen_8x8_matrix::route(gefen_8x8_matrix::$inputs['denon_in'], gefen_8x8_matrix::$outputs['80inch']);
        break;
      case 'aux_4':
        denon::toggle_power(TRUE);
        denon::set_sat_cbl();
        gefen_8x8_matrix::route(gefen_8x8_matrix::$inputs['kb_nix'], denon::$denon_output_index);
        gefen_8x8_matrix::route(gefen_8x8_matrix::$inputs['denon_in'], gefen_8x8_matrix::$outputs['80inch']);
        break;
    }
  }

  static function check_special_signal() {
    $did_special_buffer = false;
    self::$reset_matrix_count++;
    foreach (self::$remotes as $k => $r) {
      self::$remotes[$k]['special-counter'] ++;
      $has_buffer = !empty(self::$remotes[$k]['special-buffer']);
      if ($has_buffer && self::$remotes[$k]['special-counter'] >= self::$special_count_check_min) {
        $did_special_buffer = TRUE;
        self::process_special_signal($k);
      }
    }

    if (self::$reset_matrix_count > 10 && !$did_special_buffer) {
      self::$reset_matrix_count = 0;
      gefen_8x8_matrix::get_status();
    }
  }

  static function process_special_signal($remote_code) {
    if (count(self::$remotes[$remote_code]['special-buffer'])) {
      gefen_8x8_matrix::get_status();
      $special_signal = '';
      foreach (self::$remotes[$remote_code]['special-buffer'] as $ss) {
        $special_signal .= $ss;
      }
      $zone = self::$remotes[$remote_code]['zone'];
      $output_index = isset(gefen_8x8_matrix::$outputs[$zone]) ? gefen_8x8_matrix::$outputs[$zone] : NULL;
      $input_index = isset(gefen_8x8_matrix::$state[$output_index]) ? gefen_8x8_matrix::$state[$output_index] : NULL;

      //itach::l('process_special_signal:' . $remote_code . ':::' . $zone . ':::' . $special_signal);
      switch ($special_signal) {
        case('cable_1cable_1cable_1'):
          self::$remotes[$remote_code]['zone'] = '80inch';
          break;
        case('cable_2cable_2cable_2'):
          self::$remotes[$remote_code]['zone'] = 'bedroom';
          break;
        case('cable_3cable_3cable_3'):
          self::$remotes[$remote_code]['zone'] = 'workout';
          break;
        case'cable_1':
          gefen_8x8_matrix::set_input_for_zone(self::$remotes[$remote_code]['zone'], 'kb_cable');
          break;
        case'cable_2':
          gefen_8x8_matrix::set_input_for_zone(self::$remotes[$remote_code]['zone'], 'co_cable');
          break;
        case'cable_3':
          gefen_8x8_matrix::set_input_for_zone(self::$remotes[$remote_code]['zone'], 'kb_mac');
          break;
        case'cable_4':
          gefen_8x8_matrix::set_input_for_zone(self::$remotes[$remote_code]['zone'], 'kb_nix');
          break;
        case'cable_0cable_6':
          hue::strobe(FALSE);
          break;
        case'cable_0cable_0':
          hue::turn_all_lights(FALSE);
          break;
        case'cable_0cable_1':
          hue::turn_all_lights(TRUE);
          //gefen_8x8_matrix::set_input_for_zone(self::$remotes[$remote_code]['zone'], 3);
          break;
        default:
          print "SPECIAL_SOGNAL_NOT_FOUND:" . $special_signal . PHP_EOL;
          $color_hex = preg_match('`^cable_favorite(.*)`', $special_signal, $matches);
          if ($color_hex) {
            //itach::l(print_r($matches[1], TRUE));
            hue::handle_special_signal($matches[1]);
          } else {
            itach::l('not lights');
          }
      }
      self::$remotes[$remote_code]['special-buffer'] = array();
    }
  }

  static function l($str) {
    if (self::$debug) {
      if (is_array($str)) {
        var_export($str);
      } else {
        print $str . PHP_EOL;
      }
    }
  }

  /*
   * 

    if (preg_match('`^(cable|tv)`', $signal)) {
    print 'CHECK TV ON: ' . self::$info['orsense'][$output_index] . PHP_EOL;
    if (!(int) self::$info['orsense'][$output_index]) {
    self::itach_send_signal($port, $signal);
    usleep(69);
    self::turn_on_tv($port, $output_index);
    } else {
    self::itach_send_signal($port, $signal);
    }
    }
   */

  static function turn_on_tv($port, $output_index) {
    $signal_code = $output_index . '_tv_power';
    self::itach_send_signal($port, $signal_code);
    itach::reset_matrix_status();
  }

  static function itach_send_signal($port = NULL, $signal_code = NULL) {
    if (!empty($port)) {
      $fp = self::init_fp();
      if (!empty($signal_code) && isset(self::$ir_codes[$signal_code])) {

        if (strpos(self::$ir_codes[$signal_code], '|')) {
          $f = explode('|', self::$ir_codes[$signal_code]);
        } else {
          $f = array("38369", self::$ir_codes[$signal_code]);
        }

        self::$code_id++;
        if (self::$code_id > 1000) {
          self::$code_id = 1;
        }
        $s = 'sendir,1:' . $port . ',' . self::$code_id . ',' . $f[0] . ',1,1,' . $f[1] . "\r";

        //itach::l('ITACH SEND: ' . $s);;
        fwrite($fp, $s);
      } else {
        print 'ITACH SIGNAL NOT FOUND:' . $signal_code . PHP_EOL;
      }
    } else {
      print 'ITACH EMTPY PORT!' . PHP_EOL;
    }
  }

  static function init($channel_code = NULL) {

    $continue = self::process_special_code($channel_code);
    if ($continue) {
      if (empty(self::$fp)) {
        self::$fp = stream_socket_client("tcp://192.168.1.70:4998", $errno, $errstr, 30);
        if ($errno) {
          print $errno . '::ERRROR""' . $errstr . PHP_EOL;
        }
        stream_set_blocking(self::$fp, 0);
      }
      if (!empty($channel_code) && isset(self::$ir_codes[$channel_code])) {

        if (strpos(self::$ir_codes[$channel_code], '|')) {
          $f = explode('|', self::$ir_codes[$channel_code]);
        } else {
          $f = array("38369", self::$ir_codes[$channel_code]);
        }
        self::$code_id++;
        if (self::$code_id > 1000) {
          self::$code_id = 1;
        }
        $s = 'sendir,1:1,' . self::$code_id . ',' . $f[0] . ',1,1,' . $f[1] . "\r";
        print $channel_code . PHP_EOL;
        fwrite(self::$fp, $s);
        usleep(16);
      } else {
        print "COMMAND NOT FOUND: {$channel_code}" . PHP_EOL;
      }
    }

    return;
  }

  static function process_special_code($channel_code) {
    $continue = TRUE;
    switch ($channel_code) {
      case 'cable_help':
        $continue = FALSE;
        gefen_8x8_matrix::get_status();
        break;
    }
    return $continue;
  }

  static $remotes = array(
      
    '#0110101001' => array(
      'zone' => '80inch',
      'special-counter' => 100,
      'special-buffer' => array(),
      'repeat' => 0,
      'previous-signal' => '',
      'last-sent' => '',
    ),
    
    '#0111000011' => array(
      'zone' => '80inch',
      'special-counter' => 100,
      'special-buffer' => array(),
      'repeat' => 0,
      'previous-signal' => '',
      'last-sent' => '',
    ),
 
    '#0110000101' => array(
      'zone' => 'bedroom',
      'special-counter' => 100,
      'special-buffer' => array(),
      'repeat' => 0,
      'previous-signal' => '',
      'last-sent' => '',
    ),
    
    '#0110010111' => array(
      'zone' => 'workout',
      'special-counter' => 100,
      'special-buffer' => array(),
      'repeat' => 0,
      'previous-signal' => '',
      'last-sent' => '',
    ),
  );
// volume down: sendir,1:1,1,37914,1,1,337,172,19,23,19,23,19,65,19,24,19,23,19,24,19,23,19,23,19,65,19,65,19,23,19,66,19,66,19,65,19,66,19,65,20,65,19,65,19,23,19,23,19,23,19,23,19,24,19,23,19,23,19,23,19,66,19,65,19,66,19,65,19,66,19,66,19,1506,338,87,19,3621,338,87,19,3791


  static $ir_codes = array(
    "cable_channel_down" => "337,171,17,87,17,86,17,171,18,170,18,86,18,86,18,85,18,86,18,85,18,85,18,86,18,85,18,86,18,85,18,170,18,86,18,1321,338,87,17,3791",
    "cable_channel_up" => "323,4,11,172,16,171,17,171,18,86,18,170,18,85,18,86,18,85,18,86,18,86,18,85,18,86,18,85,18,170,18,85,18,170,18,85,18,1152,337,88,17,3315,338,87,17,3315,338,87,17,3791",
    "cable_favorite" => "338,171,18,171,18,86,18,170,18,86,18,171,18,86,18,86,18,86,18,86,18,86,18,86,18,86,18,85,18,171,18,86,18,170,18,1154,338,87,17,3322,337,88,17,3800",
    "cable_1" => "338,171,18,171,18,86,18,86,18,86,18,86,18,86,18,86,18,86,18,86,18,86,18,86,18,86,18,170,18,170,18,171,18,171,18,1154,337,88,17,3322,337,88,17,3800",
    "cable_2" => "338,171,17,87,17,171,18,86,18,85,18,85,18,86,18,85,18,85,18,85,18,86,18,86,18,85,18,85,18,170,18,170,18,170,18,1236,337,88,17,3791",
    "cable_3" => "37914|238,4,10,4,4,4,14,4,4,8,6,5,4,209,17,170,18,170,17,86,18,86,17,86,18,85,17,86,17,87,17,86,17,86,18,86,17,86,18,170,18,86,17,171,18,170,18,1151,301,4,13,4,15,89,16,3315,338,88,16,3315,337,88,16,3791",
    "cable_4" => "40302|319,4,9,4,4,185,16,92,17,92,17,182,17,92,18,91,17,91,18,91,18,92,17,91,18,91,18,91,17,92,18,91,17,92,17,181,18,181,18,1404,338,92,17,3523,338,93,17,4030",
    "cable_5" => "37914|328,4,4,176,17,171,17,86,17,171,17,86,17,87,17,86,17,86,18,86,17,86,17,87,18,86,17,86,17,171,18,170,18,86,17,171,17,1153,171,6,34,4,21,6,17,4,5,6,4,7,4,7,4,26,4,117,4,3791",
    "cable_6" => "37914|312,5,20,172,17,87,16,172,18,170,18,85,18,86,18,85,18,86,18,86,18,86,17,86,18,86,18,85,18,86,18,170,18,86,18,170,18,1236,338,87,17,3314,232,4,31,4,4,4,7,4,4,14,14,12,4,97,16,3791",
    "cable_7" => "38461|343,172,19,172,19,172,19,172,19,86,19,86,19,86,19,86,19,86,19,86,19,86,19,86,19,86,19,172,19,86,19,86,19,172,19,1168,343,86,19,3361,343,87,19,3846",
    "cable_8" => "37914|306,8,20,175,16,87,17,87,17,86,17,171,18,86,17,87,17,86,17,87,17,86,17,87,18,86,17,86,18,86,18,86,17,87,17,171,17,1407,256,5,16,7,43,97,14,3316,256,4,4,4,14,6,38,6,4,90,16,3791",
    "cable_9" => "38004|306,4,11,4,9,178,17,171,17,87,17,87,17,172,17,87,18,86,17,87,18,86,18,86,18,85,18,86,18,86,17,171,17,171,18,170,18,86,18,1154,305,14,8,99,16,3322,305,4,8,5,5,99,16,3800",
    "cable_0" => "37914|265,4,53,12,5,172,17,87,17,86,17,87,17,86,17,87,17,86,17,87,17,86,17,86,18,86,18,85,18,86,17,86,18,86,18,85,17,87,17,1576,301,4,18,4,4,9,4,89,15,3791",
    "cable_pip_on_off" => "112,6,4,10,4,169,4,8,4,11,5,284,16,181,7,89,16,86,17,88,15,172,17,87,4,4,8,88,16,86,17,87,11,4,4,88,15,87,17,87,16,87,16,172,17,171,17,1237,139,287,4,4,5,3323,183,5,4,235,16,3315,203,221,10,4,4,3791",
    "cable_pip_swap" => "14,2,5,116,2,136,4,114,7,68,9,32,15,109,17,212,15,33,3,68,9,401,12,10,2,6,2,51,6,5,5,2,2,1313,41,78,8,7,2,1300,66,8,3,75,7,1419",
    "cable_pip_channel_up" => "146,6,24,5,6,11,4,21,4,12,26,4,55,9,4,182,5,4,4,174,17,87,16,172,18,86,17,87,17,171,17,86,17,87,17,87,17,87,17,86,17,87,17,171,18,86,17,87,17,171,18,1154,143,12,4,13,10,17,4,9,4,4,13,25,4,4,7,7,4,28,7,7,8,104,6,3332,161,31,7,6,4,219,15,3800",
    "cable_pip_channel_down" => "24,4,7,4,15,3,25,3,34,462,5,129,6,65,16,194,16,208,14,207,17,207,16,122,3,884,5,5,3,31,3,7,31,3,3,10,5,7,3,3,11,14,3,2525,6,7,4,16,3,27,4,3,6,5,8,7,3,8,27,7,5,2671",
    "cable_exit" => "338,171,17,87,17,171,17,87,17,86,18,170,17,86,17,86,18,85,18,86,18,86,18,85,18,85,18,170,18,86,18,170,18,170,18,1152,338,87,16,3791",
    "cable_help" => "38369|343,171,19,86,19,171,19,86,19,86,19,171,19,171,19,86,19,86,19,86,19,86,19,86,19,86,19,171,19,171,19,86,19,171,19,1079,343,86,19,3836",
    "cable_last" => "295,7,8,7,19,172,16,172,17,171,17,87,17,87,17,171,17,87,17,86,17,86,17,87,17,87,18,86,18,86,17,86,18,86,18,171,18,171,17,1155,217,5,10,4,62,4,35,3428,213,8,14,26,9,6,5,4,28,4,20,89,6,3800",
    "cable_guide" => "337,172,17,87,17,86,18,86,17,86,17,171,17,171,18,86,18,85,17,86,18,85,18,86,17,86,18,170,18,86,18,170,18,170,18,1151,338,87,17,3315,296,4,22,4,13,88,17,3791",
    "cable_info" => "38461|343,172,19,172,19,172,19,86,19,86,19,172,19,172,19,86,19,86,19,86,19,86,19,86,19,86,19,86,19,172,19,86,19,172,19,1082,343,86,19,3361,343,87,19,3846",
    "cable_menu" => "38461|343,172,19,172,19,86,19,86,19,172,19,172,19,86,19,86,19,86,19,86,19,86,19,86,19,86,19,86,19,172,19,172,19,86,19,1168,343,86,19,3361,343,87,19,3846",
    "cable_page_up" => "38369|343,171,19,86,19,171,19,86,19,171,19,171,19,171,19,86,19,86,19,86,19,86,19,86,19,86,19,171,19,171,19,86,19,86,19,1079,343,86,19,3353,343,86,19,3836",
    "cable_page_down" => "38369|343,171,19,171,19,171,19,86,19,171,19,171,19,171,19,86,19,86,19,86,19,86,19,86,19,86,19,86,19,171,19,86,19,86,19,1079,343,86,19,3353,343,86,19,3836",
    "cable_ok_select" => "37914|338,170,18,171,18,85,18,86,18,85,18,170,18,85,18,86,18,86,18,85,18,85,19,85,18,86,18,86,18,170,18,170,18,170,19,1151,338,87,18,3314,338,87,18,3791",
    "cable_up_arrow" => "296,4,4,4,5,12,11,176,17,86,17,86,17,171,17,87,17,171,17,171,18,86,18,86,18,85,18,86,17,86,17,86,17,171,18,85,18,85,18,171,17,1153,306,4,15,100,16,3791",
    "cable_right_arrow" => "38004|288,4,20,197,16,172,17,171,17,171,18,86,18,171,18,171,17,87,18,86,18,86,18,86,18,86,16,87,17,87,18,171,17,171,18,86,18,985,244,4,5,10,4,7,6,8,4,6,4,127,13,3800",
    "cable_down_arrow" => "338,171,17,171,18,85,18,170,18,85,18,170,18,170,18,85,18,85,18,85,18,86,18,85,18,86,18,86,18,86,18,86,18,170,18,1152,322,4,4,4,8,88,16,3316,215,6,4,8,6,6,23,16,4,4,4,3469,107,6,41,5,4,4,4,6,4,4,6,73,4,3791",
    "cable_left_arrow" => "338,172,18,86,17,172,18,171,18,86,18,171,18,171,18,86,18,86,18,86,18,86,18,86,18,86,18,171,18,171,18,171,17,86,18,987,338,88,16,3331,319,4,14,88,17,3330,338,88,16,3809",
    "cable_day_minus" => "212,4,36,5,16,7,25,6,24,173,16,171,17,87,17,87,17,171,17,171,18,171,17,86,18,86,18,86,17,87,18,86,18,86,17,87,17,87,18,171,17,86,18,1154,208,4,16,11,4,6,19,52,4,101,17,3322,244,21,4,6,4,23,5,125,16,3800",
    "cable_day_plus" => "232,4,4,4,4,4,4,5,7,9,4,22,4,34,4,176,16,87,17,86,17,87,17,171,18,170,18,170,18,85,18,86,17,87,17,86,17,87,17,86,18,170,17,86,17,171,17,86,18,1151,256,19,11,137,17,3315,287,138,4,5,10,3791",
    "cable_rewind" => "37914|337,172,17,87,18,170,18,170,18,170,17,171,18,86,18,85,18,86,18,86,18,86,17,86,17,86,18,170,18,86,18,85,18,86,18,1151,337,88,17,3315,337,88,17,3791",
    "cable_play" => "38369|343,171,19,171,19,171,19,86,19,171,19,171,19,86,19,86,19,86,19,86,19,86,19,86,19,86,19,86,19,86,19,171,19,86,19,1165,343,86,19,3836",
    "cable_fast_forward" => "338,171,17,171,18,86,17,171,18,170,18,170,18,85,18,85,18,86,18,86,18,85,18,86,18,86,18,85,18,170,18,85,18,86,18,1151,337,88,17,3314,337,88,17,3791",
    "cable_stop" => "337,172,17,86,17,87,17,171,18,170,18,170,18,86,17,86,18,85,18,86,17,86,18,85,18,86,17,171,18,170,18,85,18,85,18,1151,337,90,15,3314,338,87,16,3315,302,4,29,89,16,3314,307,5,24,87,17,3791",
    "cable_pause" => "337,172,17,171,18,170,18,170,18,170,18,170,18,86,18,85,18,86,18,85,18,85,18,86,18,85,18,86,18,86,18,86,18,85,18,1151,338,87,17,3791",
    "cable_record" => "339,171,17,171,18,85,17,86,18,85,18,170,18,170,18,85,18,86,18,86,18,85,18,85,18,86,18,85,18,86,18,170,18,170,18,1152,338,87,17,3791",
    "cable_jump_back" => "328,180,17,86,17,86,18,170,17,171,18,170,18,170,18,85,18,86,18,85,18,86,18,86,18,86,18,170,18,86,18,86,18,85,18,1151,322,4,4,98,16,3791",
    "cable_my_dvr" => "38369|343,171,19,171,19,86,19,171,19,171,19,171,19,171,19,86,19,86,19,86,19,86,19,86,19,86,19,86,19,86,19,86,19,86,19,1165,343,86,19,3836",
    "cable_live" => "37914|338,171,17,87,17,171,18,170,18,170,18,170,18,170,18,85,18,86,18,86,18,85,18,85,18,86,18,170,18,170,18,170,18,170,18,813,338,87,17,3314,338,87,17,3791",
    "cable_on_demmand" => "338,171,18,86,18,170,18,86,18,171,18,171,18,85,18,86,18,86,18,86,18,86,18,86,18,86,18,171,18,86,18,170,19,85,18,1154,338,87,18,3322,338,88,17,3322,338,87,18,3800",
    "cable_power" => "337,172,17,87,17,171,17,86,17,171,18,85,18,86,18,85,17,86,18,85,18,86,18,85,18,86,18,86,18,170,18,170,18,86,18,1236,318,4,12,92,17,3314,286,4,49,88,15,3791",
    "aux_rewind" => "13,1066,4,1200,4,1123,18,52,6,10,4,788,4,12,4,633,4,555,4,73,4,205,4,3791",
    "aux_play" => "131,4,4,4,10,36,7,4,7,285,5,4,4,184,7,34,4,115,4,4,5,41,4,67,4,4,4,74,4,12,5,37,4,34,4,4,4,81,4,63,18,23,4,9,4,72,6,5,4,24,4,5,4,83,7,26,6,78,10,32,4,72,6,73,5,80,4,4,5,27,12,25,6,75,4,4,4,5,4,4,4,28,5,6,4,75,4,30,4,4,4,70,4,1077,107,5,8,10,4,26,4,9,4,11,4,6,4,6,9,282,4,7,4,26,4,74,11,107,6,40,4,75,4,5,4,105,4,4,4,71,4,4,5,33,7,39,4,5,4,67,7,69,4,38,4,4,4,79,11,24,4,5,4,73,6,108,6,35,15,64,4,87,4,69,7,8,4,69,4,7,4,71,4,31,4,114,4,48,4,42,4,74,4,3800",
    "aux_fast_forward" => "320,162,19,22,19,61,19,61,19,21,19,22,19,61,19,21,19,61,19,61,19,21,19,21,19,61,19,61,19,22,19,61,19,21,19,61,19,61,20,20,19,21,19,61,20,20,19,21,19,61,19,21,19,21,19,61,19,61,19,22,19,61,19,61,19,21,19,980,320,162,19,22,19,61,19,61,19,21,19,21,19,61,19,22,19,61,19,61,20,21,19,21,19,61,19,61,20,20,19,61,19,21,19,61,19,61,20,20,20,20,19,61,19,22,19,21,19,61,19,22,19,21,19,61,19,61,19,22,19,61,19,61,19,21,19,3791",
    "aux_stop" => "8,7,14,4,5,4,7,18,10,523,4,7,6,69,4,85,4,121,4,67,8,82,5,24,4,8,4,125,4,63,7,33,8,127,4,69,4,6,4,28,7,114,4,157,7,71,9,4,4,67,11,66,7,83,4,37,7,64,17,62,4,6,4,3800",
    "aux_pause" => "143,8,13,4,4,6,4,4,4,6,4,4,9,11,4,13,4,252,8,35,10,143,14,28,4,4,5,28,10,4,4,65,7,34,18,62,6,74,13,30,5,4,4,25,13,64,16,64,4,7,10,22,4,4,11,62,4,4,14,25,15,71,9,27,10,65,18,24,17,61,18,62,15,65,15,23,13,26,18,63,17,28,12,62,4,7,8,23,10,30,18,26,4,4,4,66,10,4,4,985,175,4,19,4,4,5,4,11,4,4,4,5,8,21,4,14,4,198,5,6,4,29,14,62,18,62,4,8,6,24,4,4,4,4,4,4,4,24,9,7,4,64,11,4,5,22,17,65,16,62,7,4,6,24,9,4,6,29,11,62,19,61,4,5,4,5,4,24,17,64,17,22,17,63,18,23,10,66,18,23,17,62,18,62,18,63,18,64,13,65,17,22,18,62,18,23,16,23,18,35,5,62,18,3791",
    "aux_info" => "320,162,19,22,19,61,20,60,19,22,19,21,19,61,19,21,20,60,19,61,19,22,19,21,19,61,19,61,19,21,19,61,20,20,19,61,20,21,20,21,19,21,19,21,19,61,19,21,19,61,19,21,19,61,19,61,19,61,20,60,19,21,19,61,19,21,19,982,320,163,19,61,19,61,19,61,19,61,20,20,19,61,19,21,19,61,19,21,19,21,19,21,19,21,19,61,19,21,19,61,20,20,19,61,19,61,19,21,19,21,19,21,20,60,19,61,19,61,19,21,19,21,19,61,19,61,19,61,19,21,19,21,19,21,19,982,320,162,19,21,19,61,19,61,19,21,19,21,19,61,19,21,19,61,19,61,19,21,19,21,19,61,20,60,20,21,19,61,19,21,19,61,20,20,19,22,19,21,19,21,19,61,19,21,19,61,20,20,19,61,20,61,20,61,19,61,20,21,19,61,19,21,19,982,320,163,19,62,19,61,19,61,19,61,19,21,19,61,19,21,20,60,19,21,19,21,19,21,19,21,19,61,19,21,19,61,19,21,19,61,19,61,19,21,19,21,19,21,19,61,19,61,20,60,20,20,20,20,19,61,19,61,19,61,20,21,19,21,19,21,19,3800",
    "aux_menu" => "320,162,19,22,19,61,19,61,19,21,19,22,18,62,19,21,19,61,19,61,19,22,19,21,18,62,19,61,19,21,19,61,19,21,19,61,19,22,19,21,19,21,19,21,19,61,19,21,19,61,19,21,19,61,19,61,19,61,19,61,19,21,19,61,19,21,19,980,277,4,29,7,4,163,19,61,18,62,19,61,19,61,19,21,19,61,19,21,19,61,19,21,19,22,18,22,19,21,18,62,19,21,19,61,19,21,19,61,19,21,19,21,19,61,19,61,19,61,19,21,19,61,19,21,19,61,19,61,20,20,19,21,19,21,19,61,19,21,19,980,320,162,19,22,19,61,19,61,19,21,19,21,19,61,19,21,19,61,19,61,19,22,19,21,19,61,19,61,19,22,19,61,19,21,19,61,19,22,18,22,19,21,19,21,19,61,19,21,19,61,19,21,19,61,20,61,19,61,19,61,19,21,19,61,19,22,19,980,320,162,19,61,19,61,19,61,19,61,19,21,19,61,19,21,19,61,19,21,19,21,19,21,19,21,19,61,19,21,19,61,19,21,19,61,19,21,19,22,18,62,19,61,19,61,19,21,19,61,19,21,19,61,20,60,19,21,19,22,19,21,18,62,19,21,19,3791",
    "aux_last" => "320,162,19,22,19,61,19,61,19,21,19,22,19,61,19,21,19,61,19,61,19,21,19,22,19,61,19,61,19,22,19,61,19,21,19,61,19,21,19,21,19,21,20,21,19,61,19,21,19,61,19,21,19,61,20,60,20,60,19,61,20,20,19,61,19,21,19,982,321,161,19,61,19,61,19,61,19,61,19,21,20,60,20,21,19,61,19,21,19,21,19,21,19,21,19,61,20,20,19,61,19,22,19,21,19,21,19,61,20,20,19,22,19,61,19,61,20,61,19,61,20,60,19,21,19,61,20,60,19,22,19,21,19,21,19,982,321,161,20,21,19,61,19,61,19,21,19,21,19,61,19,21,19,62,19,61,19,21,19,21,20,60,19,61,19,21,19,61,20,21,19,61,20,20,19,22,19,21,19,21,19,61,19,22,19,61,19,21,19,61,19,61,19,61,20,60,20,21,19,61,19,21,19,982,320,162,19,61,19,61,19,61,19,61,20,21,19,61,19,22,19,61,19,21,20,21,19,21,19,22,19,61,19,21,20,60,19,21,19,21,19,21,19,61,19,21,19,21,19,61,19,61,19,61,19,61,20,60,20,20,19,61,20,60,20,20,20,21,19,21,20,3800",
    "aux_exit" => "320,162,19,21,19,61,20,60,19,21,20,21,19,61,19,21,19,61,20,60,20,21,19,21,19,61,19,61,20,21,19,61,20,20,19,61,20,20,19,21,19,21,19,21,19,61,19,21,19,61,20,21,19,61,20,60,20,60,20,60,20,20,20,60,20,20,20,981,320,162,20,61,20,60,20,60,20,60,20,20,20,60,20,20,20,60,20,21,19,21,19,21,19,21,19,61,20,20,19,61,20,21,19,21,20,21,19,61,20,21,19,61,19,61,20,60,20,60,20,60,20,60,20,20,20,61,20,20,20,20,19,21,20,20,20,981,321,161,20,21,19,61,19,61,20,20,19,21,19,61,20,20,20,60,20,61,19,21,20,21,19,61,20,60,20,20,20,60,20,21,19,61,20,20,20,20,20,21,19,21,19,62,19,21,19,61,20,20,19,61,20,60,21,60,20,60,20,20,20,60,20,21,20,981,321,161,20,60,20,60,20,60,20,60,20,20,20,60,20,20,19,61,20,20,20,20,20,20,20,20,19,61,19,21,19,61,19,21,19,21,20,20,20,60,19,21,19,61,19,61,19,61,20,60,20,60,20,60,20,20,20,60,20,20,19,21,19,21,20,20,19,3800",
    "aux_volume_down" => "321,161,20,21,19,61,20,60,20,21,19,21,19,61,19,21,19,61,19,61,20,20,20,21,19,61,20,60,20,20,20,60,19,21,19,61,20,60,20,20,20,60,19,21,20,20,19,21,19,21,19,21,19,21,19,61,19,21,19,61,20,60,20,60,20,60,20,982,320,162,19,22,19,61,20,60,20,21,19,21,19,61,20,20,19,61,19,61,19,21,19,21,19,61,20,60,20,20,20,60,20,20,19,61,20,60,20,21,19,61,19,21,20,21,19,21,19,21,19,21,19,22,19,61,20,21,19,61,20,60,20,61,19,61,20,3800",
    "aux_volume_up" => "321,161,19,21,19,61,19,61,19,21,19,21,19,61,19,21,20,60,19,61,20,20,19,21,19,61,19,61,19,21,19,61,20,21,19,21,19,61,20,20,19,61,20,20,20,20,19,22,19,21,19,61,20,21,19,60,19,21,19,61,20,60,19,61,20,60,20,979,321,161,19,22,19,61,19,61,20,20,19,21,19,61,20,20,19,61,19,61,20,20,19,21,19,61,19,61,19,21,20,60,20,20,19,21,19,61,20,20,20,60,20,20,19,21,19,21,19,21,20,60,20,20,19,61,19,21,19,61,19,61,19,61,19,61,20,3791",
    "aux_mute" => "321,161,20,21,19,61,19,61,20,20,19,21,19,61,19,21,19,61,19,61,20,20,19,21,19,61,19,61,19,21,20,60,19,21,19,21,19,61,19,61,20,60,20,60,20,21,19,22,19,21,19,61,19,21,20,20,20,20,19,21,20,60,20,60,20,60,19,980,320,162,19,21,19,61,19,61,20,21,19,21,19,61,19,21,19,61,19,61,20,20,19,22,19,61,19,61,20,20,19,61,19,21,19,21,19,61,19,61,19,61,20,60,20,20,20,20,19,21,19,61,19,21,19,21,20,20,19,21,19,61,19,61,20,60,20,3791",
    "aux_channel_up" => "321,161,19,21,19,61,19,61,20,20,20,20,19,61,19,22,19,61,19,61,20,20,20,20,20,60,20,60,20,21,19,61,19,21,19,61,20,20,19,21,19,21,19,61,19,21,19,21,19,61,19,21,20,60,19,61,19,61,20,21,20,60,19,61,20,20,20,979,321,161,19,21,19,61,19,61,20,20,19,21,19,61,19,21,19,61,20,60,20,21,19,21,19,61,19,61,20,20,19,61,20,21,19,61,20,20,20,20,20,20,20,60,20,21,19,21,19,61,19,21,19,61,20,60,20,60,20,20,19,61,20,60,20,20,20,3791",
    "aux_channel_down" => "320,162,19,22,19,61,19,61,19,21,19,22,19,61,19,21,19,61,19,61,19,21,19,21,19,61,20,60,19,21,19,61,19,21,19,21,19,61,19,21,19,21,19,61,19,21,19,21,19,61,19,61,20,20,19,61,19,61,20,20,19,61,19,61,20,20,19,980,320,162,20,21,19,61,19,61,19,21,19,21,18,62,19,21,19,61,20,60,19,21,19,21,19,61,19,61,19,21,19,61,19,21,19,21,19,61,19,22,19,21,19,61,20,21,18,22,19,61,19,61,19,21,19,61,19,61,19,22,19,61,19,61,19,21,19,3791",
    "aux_1" => "214,5,17,6,17,7,4,211,18,24,16,62,12,67,19,23,15,23,12,4,4,63,18,23,18,62,17,63,18,22,17,26,15,61,18,63,4,4,14,21,18,63,18,22,18,22,18,22,12,4,4,24,17,23,6,34,18,22,9,4,5,23,18,23,17,63,16,65,18,61,19,62,18,62,18,62,18,62,18,62,19,980,197,4,23,8,6,19,4,4,9,8,4,18,10,174,18,22,16,62,18,65,15,22,18,22,18,62,18,22,18,62,18,63,17,22,18,24,17,61,18,62,18,23,16,63,18,22,18,22,18,23,16,24,17,23,10,4,4,23,16,26,16,24,16,30,9,64,19,61,18,61,19,62,18,62,18,63,18,62,18,62,19,3791",
    "aux_2" => "320,162,19,21,19,61,19,61,19,21,19,21,19,61,19,21,19,61,19,61,20,20,20,21,19,61,19,61,19,22,19,61,19,21,19,61,19,21,19,21,19,22,19,21,19,21,19,21,19,21,19,21,19,61,19,61,19,61,19,61,19,61,19,61,19,61,19,980,320,162,19,22,19,61,19,61,19,22,19,21,19,61,19,21,19,61,19,61,20,20,19,21,19,61,19,61,20,21,19,61,19,21,19,61,19,21,19,21,19,22,19,21,19,21,19,21,18,22,19,21,19,61,19,61,19,61,19,61,19,61,19,61,19,61,20,3791",
    "aux_3" => "14,4,4,14,5,4,7,4,13,11,28,4,7,4,26,4,8,4,4,5,16,4,12,4,62,4,376,4,118,4,308,6,34,4,4,4,6,4,303,4,12,4,33,4,278,4,6,4,161,4,105,6,393,7,996,4,6,12,4,8,4,15,9,19,14,5,13,4,16,4,21,4,67,6,615,4,40,4,319,4,68,4,40,8,112,5,30,8,4,4,62,4,4,4,5,4,81,4,153,4,200,4,70,10,80,4,145,17,75,7,4,3791",
    "aux_4" => "32,4,24,14,18,8,13,4,9,4,4,9,8,4,4,4,4,4,4,5,4,23,9,16,4,271,4,31,4,8,4,70,4,6,4,109,4,40,4,276,4,37,9,4,4,24,11,67,4,4,4,76,4,5,4,25,4,5,4,70,4,15,4,29,13,142,4,5,4,7,4,23,4,10,4,4,4,26,4,11,4,31,7,67,7,4,4,25,4,40,4,127,5,65,4,7,7,63,8,73,4,79,4,5,4,4,5,64,4,4,14,982,92,4,23,4,17,5,14,4,5,5,10,4,22,10,9,17,14,4,4,30,4,195,16,27,4,4,4,67,16,65,4,4,4,4,5,23,18,23,5,5,4,69,8,4,4,25,14,65,18,78,4,27,5,4,4,27,15,65,16,62,4,4,14,28,11,62,18,24,14,64,18,62,17,26,6,33,7,6,4,28,14,22,12,4,4,25,18,24,16,23,16,23,4,4,4,4,4,4,4,64,17,65,16,64,16,62,18,66,12,63,4,4,15,3791",
    "aux_5" => "320,162,19,22,18,62,19,61,19,21,19,21,18,62,18,22,19,61,19,61,19,21,19,21,18,62,19,61,19,21,19,62,18,22,19,21,19,21,19,61,19,22,18,22,18,22,19,22,18,22,18,62,18,62,18,22,19,61,19,61,19,61,19,61,19,61,18,983,290,4,22,166,19,21,19,61,18,63,18,22,18,22,19,61,19,21,19,61,19,61,19,21,19,21,19,61,19,61,19,21,19,61,19,21,19,21,19,21,19,61,19,22,18,22,18,22,19,21,18,23,18,62,19,61,18,22,18,62,19,61,19,62,19,61,19,61,19,983,320,162,19,21,19,61,19,61,19,21,19,22,19,61,19,21,19,61,19,61,19,21,19,21,19,61,19,61,19,21,19,61,19,21,19,21,19,21,19,61,19,21,19,22,19,21,19,21,19,21,19,61,19,61,19,21,39,61,19,61,19,61,20,60,20,60,19,3800",
    "aux_6" => "320,162,19,21,19,61,19,61,19,21,19,21,19,61,19,21,19,61,19,61,19,21,19,21,19,61,19,61,19,21,20,60,20,20,19,61,19,21,20,60,19,21,20,20,19,21,19,21,19,21,19,21,19,61,19,21,19,61,19,61,19,61,19,61,19,61,20,979,321,161,20,20,19,61,19,61,20,20,19,21,19,61,20,21,19,61,19,61,19,21,19,22,19,61,19,61,20,20,20,60,19,21,19,61,19,21,19,61,20,21,19,21,19,21,19,21,19,21,19,21,19,61,19,21,20,60,19,61,20,60,19,61,19,61,20,3791",
    "aux_7" => "208,4,4,4,30,7,4,7,4,14,4,4,7,10,4,18,4,166,15,23,18,64,13,64,10,30,18,22,18,62,18,22,18,62,18,64,17,22,18,31,10,61,4,4,15,63,17,23,18,62,18,23,17,23,17,62,18,63,18,22,18,23,15,25,16,24,17,22,15,70,13,23,17,23,18,62,16,64,18,62,18,62,19,67,13,981,223,4,4,12,4,38,4,21,4,171,19,21,18,62,18,62,18,23,16,23,18,62,19,22,18,64,14,63,18,23,18,22,18,62,17,63,19,22,18,62,19,22,18,22,17,63,14,66,18,23,18,22,18,22,18,22,18,22,18,62,18,22,18,22,17,63,19,61,19,63,16,62,18,62,18,3791",
    "aux_8" => "321,161,19,21,19,61,19,61,19,21,19,21,19,61,19,21,19,61,20,60,19,21,19,21,19,61,20,60,19,21,19,61,19,21,19,61,19,61,20,60,19,22,19,21,19,21,19,21,19,21,19,21,19,21,19,21,19,61,19,61,19,61,19,61,20,60,19,980,320,162,19,22,19,61,19,61,19,21,19,21,19,61,19,21,19,61,19,61,19,22,19,21,19,61,19,61,19,21,19,61,20,20,19,61,19,61,19,61,19,21,19,22,19,21,18,22,19,21,19,21,19,21,19,21,19,61,19,61,19,61,19,61,19,61,19,980,320,162,19,21,19,61,19,61,19,21,19,21,19,61,19,21,19,61,19,61,19,22,19,21,19,61,19,61,19,21,19,61,19,22,18,62,19,61,19,61,19,21,19,21,19,21,19,21,18,22,19,21,19,21,19,22,20,60,19,61,19,61,19,61,19,61,19,3791",
    "aux_9" => "320,162,19,21,19,61,19,61,20,20,19,21,19,61,19,21,19,61,19,61,19,21,19,21,19,61,19,61,19,22,19,61,20,20,19,21,19,21,19,21,19,61,19,21,19,22,19,21,19,21,19,61,19,61,19,61,19,21,19,61,19,61,19,61,20,60,19,980,320,162,19,21,19,61,19,61,19,21,19,21,19,61,19,21,19,61,19,61,19,21,19,21,19,61,19,61,19,21,19,61,19,21,19,21,19,21,19,21,19,61,19,21,19,21,19,21,18,22,19,61,19,61,19,61,20,20,19,61,19,61,19,61,19,61,19,3791",
    "aux_0" => "321,161,19,21,19,61,19,61,19,21,19,21,19,61,19,22,19,61,19,61,19,22,19,21,19,61,20,60,19,21,19,61,19,21,19,61,20,20,19,21,19,61,19,21,19,21,19,21,19,21,19,21,19,61,19,61,19,21,19,61,20,60,19,61,20,60,19,1462,20,20,19,61,19,61,20,20,19,21,19,61,19,21,19,61,20,60,19,21,19,21,19,61,20,60,19,21,19,61,19,21,19,61,20,20,20,20,19,61,19,21,20,20,19,21,19,21,19,21,19,61,19,61,20,20,19,61,19,61,20,60,20,60,20,979,321,161,20,20,19,61,19,61,20,20,19,21,19,61,20,21,19,61,19,61,20,20,19,21,19,61,19,61,19,21,19,61,20,20,19,61,19,21,19,21,19,61,19,21,19,21,19,21,19,21,20,20,19,61,19,61,20,20,20,61,19,61,19,61,20,60,19,3791",
    "aux_tv_vcr" => "57,4,46,8,8,4,4,5,4,14,9,4,7,9,7,4,4,298,4,5,4,32,4,75,10,80,4,4,4,29,4,5,5,25,9,85,4,105,4,8,6,66,4,6,6,67,4,158,4,46,8,72,4,72,4,161,4,83,7,34,4,32,4,87,4,147,4,4,4,4,4,67,4,4,4,29,4,8,4,34,6,69,4,6,4,4,6,72,4,4,4,25,5,4,5,985,14,4,28,28,4,25,4,19,4,4,4,22,11,4,5,315,4,39,7,70,4,155,4,125,4,4,4,147,4,4,4,4,4,26,4,4,4,32,10,4,4,266,4,43,4,46,4,67,4,88,4,68,4,4,6,25,6,37,11,152,4,72,4,4,6,6,4,64,17,76,4,63,4,4,4,73,7,4,5,34,4,3791",
    "aux_power" => "320,162,19,21,19,61,19,61,19,22,19,21,19,61,19,22,19,61,19,61,19,21,19,21,19,61,19,61,19,21,19,61,19,22,19,21,19,21,19,61,19,61,19,61,19,21,19,21,19,21,19,61,19,61,20,20,19,21,19,21,19,61,19,61,19,61,19,983,320,162,20,21,19,61,19,61,19,21,19,21,19,61,20,20,19,61,19,61,19,21,19,21,19,61,19,61,19,21,19,61,19,22,19,21,19,21,19,61,19,61,20,60,19,21,19,21,19,21,19,61,19,61,19,21,19,21,19,21,19,61,19,61,19,61,19,982,321,161,20,21,19,61,19,61,19,22,19,21,19,61,19,21,19,61,19,61,20,21,19,21,19,61,19,61,19,21,19,61,19,21,19,22,19,21,19,61,19,61,20,60,20,20,19,22,19,21,19,61,19,61,19,22,19,21,42,21,20,61,19,61,20,61,19,3800",
    "0_tv_power" => "43835|344,196,21,25,21,25,21,74,21,25,21,25,21,25,21,25,21,25,21,74,21,74,21,25,21,74,21,74,21,74,21,74,21,74,21,25,21,25,21,25,21,74,21,25,21,25,21,25,21,25,21,74,21,74,21,74,21,25,21,74,21,74,21,74,21,74,21,1740,343,99,21,4185,343,99,21,4185,343,99,21,4383",
    "0_tv_up_arrow" => "337,172,19,23,19,23,19,23,19,23,19,23,19,23,19,65,19,23,19,66,19,66,19,66,19,65,19,66,19,65,20,23,19,65,20,22,19,66,20,22,19,23,19,23,19,23,19,23,19,65,19,66,19,23,19,66,19,66,19,65,20,65,19,65,19,23,19,1506,322,4,13,88,19,3791",
    "0_tv_right_arrow" => "92,10177492,4,155,203,5,17,13,4,175,19,23,19,23,19,23,18,24,19,23,18,24,19,66,19,23,19,66,18,67,19,66,19,66,19,66,19,65,19,23,19,66,19,66,19,23,19,23,19,65,19,66,19,23,19,23,19,24,18,24,19,65,19,66,19,23,19,24,19,65,19,66,20,65,19,1506,301,11,4,4,4,6,12,88,18,3791",
    "0_tv_down_arrow" => "223,20,4,85,4,177,19,24,17,25,18,24,18,25,18,23,19,23,19,67,18,24,18,66,18,66,19,66,19,66,18,66,19,66,19,23,19,65,20,65,19,65,19,23,19,24,18,25,17,24,18,25,18,67,19,23,19,23,19,66,18,66,18,66,19,66,18,66,19,23,18,1507,251,6,4,68,4,96,19,3621,302,129,12,3791",
    "0_tv_left_arrow" => "337,172,19,24,19,23,18,25,19,23,19,23,19,23,19,65,19,24,18,66,19,66,19,66,18,66,19,65,19,66,20,22,19,66,20,65,19,23,20,65,20,65,19,66,19,23,19,23,19,24,19,23,19,65,19,23,19,23,19,23,19,66,19,66,19,65,20,1505,336,88,19,3791",
    "0_tv_channel_up" => "327,4,7,172,17,171,17,171,17,86,17,171,18,86,17,86,17,87,17,86,17,86,18,86,17,87,17,86,17,171,18,86,17,171,18,85,17,1153,235,7,6,7,15,3791",
    "0_tv_channel_down" => "45,51,44,52,44,54,4,4,38,51,12,56,12,4,4,5,9,4,4,5,4,55,4,64,4,5,25,4,4,53,15,8,9,158,12,5,4,9,4,71,4,10177492,4,155,12,265,4,99,4,87,4,146,8,12,4,7,4,54,5,233,5,52,4,4,11,53,5,92,5,159,12,154,8,6,22,160,18,173,4,124,4,88,12,153,5,61,11,4,4,59,7,52,10,159,6,1038,45,51,43,53,44,51,44,51,16,52,14,6,4,81,4,53,19,77,10,5,15,4,11,269,4,10,4,111,4,155,4,72,6,224,10,155,4,158,13,52,4,66,11,7,25,294,7,4,18,54,13,19,4,98,4,250,4,65,4,67,4,8,4,149,23,9,6,56,4,199,16,80,15,56,5,3791",
    "0_tv_help" => "338,171,20,22,19,24,19,23,19,23,19,23,19,23,19,65,19,23,19,66,19,65,20,65,20,64,20,65,20,65,20,22,20,65,20,65,20,22,20,22,19,23,20,65,20,22,20,65,19,23,19,23,19,65,20,65,20,65,20,22,20,65,19,23,19,66,20,1505,338,87,19,3791",
    "0_tv_exit" => "338,171,20,23,19,23,19,23,19,23,19,23,19,23,19,66,19,23,19,65,20,65,20,65,19,66,20,65,20,65,20,22,20,65,20,22,20,22,20,22,20,65,20,65,20,23,19,65,20,22,20,65,20,65,20,65,20,22,20,22,20,65,20,22,20,65,20,1505,338,87,19,3621,338,87,19,3791",
    "0_tv_pip_channel_down" => "338,171,20,23,19,23,19,23,19,23,19,23,19,23,19,65,20,22,19,66,19,66,20,65,20,65,20,65,20,65,20,22,20,65,20,65,20,65,20,22,20,22,20,65,20,22,20,65,20,22,20,22,20,22,19,65,20,65,20,22,19,66,20,22,19,66,20,1505,338,87,19,3621,338,87,19,3791",
    "0_tv_tv_vcr" => "338,171,20,22,19,23,19,23,19,23,19,23,19,23,19,66,19,23,19,66,19,66,20,65,20,65,20,65,20,65,20,22,20,65,20,64,20,65,20,65,20,64,20,22,20,22,20,22,20,22,20,22,19,23,19,23,19,23,19,65,20,65,20,65,20,65,20,1505,338,87,19,3791",
    "0_tv_volume_down" => "37914|337,172,19,23,19,23,19,65,19,24,19,23,19,24,19,23,19,23,19,65,19,65,19,23,19,66,19,66,19,65,19,66,19,65,20,65,19,65,19,23,19,23,19,23,19,23,19,24,19,23,19,23,19,23,19,66,19,65,19,66,19,65,19,66,19,66,19,1506,338,87,19,3621,338,87,19,3791",
    "0_tv_volume_up" => "37914|338,171,20,23,19,23,19,66,19,23,19,23,19,24,19,23,19,23,19,66,19,65,20,22,19,66,19,65,20,65,19,66,19,66,19,23,20,65,20,23,20,22,20,22,20,22,20,22,20,22,19,65,20,22,19,66,19,66,19,65,20,65,19,66,20,65,20,1505,338,87,19,3621,338,87,19,3621,338,87,19,3791",
    "0_tv_volume_mute" => "43360|339,195,20,26,20,26,20,74,20,26,19,27,19,27,19,27,19,27,19,75,19,75,20,26,19,75,19,75,20,75,19,75,19,75,20,74,20,26,20,26,19,75,20,26,20,26,19,27,19,26,20,26,20,74,20,74,19,27,19,75,20,74,20,74,20,74,20,1722,338,100,19,4141,338,99,19,4336",
    "1_tv_power" => "37647|169,170,21,64,21,64,21,64,21,21,21,21,21,21,21,21,21,21,21,64,21,64,21,64,21,21,21,21,21,21,21,21,21,21,21,21,21,64,21,21,21,21,21,21,21,21,21,21,21,21,21,64,21,21,21,64,21,64,21,64,21,64,21,64,21,64,21,1774,169,170,21,64,21,64,21,64,21,21,21,21,21,21,21,21,21,21,21,64,21,64,21,64,21,21,21,21,21,21,21,21,21,21,21,21,21,64,21,21,21,21,21,21,21,21,21,21,21,21,21,64,21,21,21,64,21,64,21,64,21,64,21,64,21,64,21,3764",
    "1_tv_volume_down" => "37647|169,170,21,64,21,64,21,64,21,21,21,21,21,21,21,21,21,21,21,64,21,64,21,64,21,21,21,21,21,21,21,21,21,21,21,64,21,64,21,21,21,64,21,21,21,21,21,21,21,21,21,21,21,21,21,64,21,21,21,64,21,64,21,64,21,64,21,1773,169,170,21,64,21,64,21,64,21,21,21,21,21,21,21,21,21,21,21,64,21,64,21,64,21,21,21,21,21,21,21,21,21,21,21,64,21,64,21,21,21,64,21,21,21,21,21,21,21,21,21,21,21,21,21,64,21,21,21,64,21,64,21,64,21,64,21,3764",
    "1_tv_volume_up" => "37647|169,170,21,64,21,64,21,64,21,21,21,21,21,21,21,21,21,21,21,64,21,64,21,64,21,21,21,21,21,21,21,21,21,21,21,64,21,64,21,64,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,64,21,64,21,64,21,64,21,64,21,1773,169,170,21,64,21,64,21,64,21,21,21,21,21,21,21,21,21,21,21,64,21,64,21,64,21,21,21,21,21,21,21,21,21,21,21,64,21,64,21,64,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,64,21,64,21,64,21,64,21,64,21,3764",
    "1_tv_volume_mute" => "37647|169,170,21,64,21,64,21,64,21,21,21,21,21,21,21,21,21,21,21,64,21,64,21,64,21,21,21,21,21,21,21,21,21,21,21,64,21,64,21,21,21,64,21,21,21,21,21,21,21,21,21,21,21,21,21,64,21,21,21,64,21,64,21,64,21,64,21,1773,169,170,21,64,21,64,21,64,21,21,21,21,21,21,21,21,21,21,21,64,21,64,21,64,21,21,21,21,21,21,21,21,21,21,21,64,21,64,21,21,21,64,21,21,21,21,21,21,21,21,21,21,21,21,21,64,21,21,21,64,21,64,21,64,21,64,21,3764",
    "1_tv_info" => "37647|169,170,21,64,21,64,21,64,21,21,21,21,21,21,21,21,21,21,21,64,21,64,21,64,21,21,21,21,21,21,21,21,21,21,21,64,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,64,21,64,21,64,21,64,21,64,21,64,21,64,21,1773,169,170,21,64,21,64,21,64,21,21,21,21,21,21,21,21,21,21,21,64,21,64,21,64,21,21,21,21,21,21,21,21,21,21,21,64,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,64,21,64,21,64,21,64,21,64,21,64,21,64,21,3764",
    "2_tv_power" => "43835|344,196,21,25,21,25,21,74,21,25,21,25,21,25,21,25,21,25,21,74,21,74,21,25,21,74,21,74,21,74,21,74,21,74,21,25,21,25,21,25,21,74,21,25,21,25,21,25,21,25,21,74,21,74,21,74,21,25,21,74,21,74,21,74,21,74,21,1740,343,99,21,4185,343,99,21,4185,343,99,21,4383",
    "2_tv_up_arrow" => "337,172,19,23,19,23,19,23,19,23,19,23,19,23,19,65,19,23,19,66,19,66,19,66,19,65,19,66,19,65,20,23,19,65,20,22,19,66,20,22,19,23,19,23,19,23,19,23,19,65,19,66,19,23,19,66,19,66,19,65,20,65,19,65,19,23,19,1506,322,4,13,88,19,3791",
    "2_tv_right_arrow" => "92,10177492,4,155,203,5,17,13,4,175,19,23,19,23,19,23,18,24,19,23,18,24,19,66,19,23,19,66,18,67,19,66,19,66,19,66,19,65,19,23,19,66,19,66,19,23,19,23,19,65,19,66,19,23,19,23,19,24,18,24,19,65,19,66,19,23,19,24,19,65,19,66,20,65,19,1506,301,11,4,4,4,6,12,88,18,3791",
    "2_tv_down_arrow" => "223,20,4,85,4,177,19,24,17,25,18,24,18,25,18,23,19,23,19,67,18,24,18,66,18,66,19,66,19,66,18,66,19,66,19,23,19,65,20,65,19,65,19,23,19,24,18,25,17,24,18,25,18,67,19,23,19,23,19,66,18,66,18,66,19,66,18,66,19,23,18,1507,251,6,4,68,4,96,19,3621,302,129,12,3791",
    "2_tv_left_arrow" => "337,172,19,24,19,23,18,25,19,23,19,23,19,23,19,65,19,24,18,66,19,66,19,66,18,66,19,65,19,66,20,22,19,66,20,65,19,23,20,65,20,65,19,66,19,23,19,23,19,24,19,23,19,65,19,23,19,23,19,23,19,66,19,66,19,65,20,1505,336,88,19,3791",
    "2_tv_channel_up" => "327,4,7,172,17,171,17,171,17,86,17,171,18,86,17,86,17,87,17,86,17,86,18,86,17,87,17,86,17,171,18,86,17,171,18,85,17,1153,235,7,6,7,15,3791",
    "2_tv_channel_down" => "45,51,44,52,44,54,4,4,38,51,12,56,12,4,4,5,9,4,4,5,4,55,4,64,4,5,25,4,4,53,15,8,9,158,12,5,4,9,4,71,4,10177492,4,155,12,265,4,99,4,87,4,146,8,12,4,7,4,54,5,233,5,52,4,4,11,53,5,92,5,159,12,154,8,6,22,160,18,173,4,124,4,88,12,153,5,61,11,4,4,59,7,52,10,159,6,1038,45,51,43,53,44,51,44,51,16,52,14,6,4,81,4,53,19,77,10,5,15,4,11,269,4,10,4,111,4,155,4,72,6,224,10,155,4,158,13,52,4,66,11,7,25,294,7,4,18,54,13,19,4,98,4,250,4,65,4,67,4,8,4,149,23,9,6,56,4,199,16,80,15,56,5,3791",
    "2_tv_help" => "338,171,20,22,19,24,19,23,19,23,19,23,19,23,19,65,19,23,19,66,19,65,20,65,20,64,20,65,20,65,20,22,20,65,20,65,20,22,20,22,19,23,20,65,20,22,20,65,19,23,19,23,19,65,20,65,20,65,20,22,20,65,19,23,19,66,20,1505,338,87,19,3791",
    "2_tv_exit" => "338,171,20,23,19,23,19,23,19,23,19,23,19,23,19,66,19,23,19,65,20,65,20,65,19,66,20,65,20,65,20,22,20,65,20,22,20,22,20,22,20,65,20,65,20,23,19,65,20,22,20,65,20,65,20,65,20,22,20,22,20,65,20,22,20,65,20,1505,338,87,19,3621,338,87,19,3791",
    "2_tv_pip_channel_down" => "338,171,20,23,19,23,19,23,19,23,19,23,19,23,19,65,20,22,19,66,19,66,20,65,20,65,20,65,20,65,20,22,20,65,20,65,20,65,20,22,20,22,20,65,20,22,20,65,20,22,20,22,20,22,19,65,20,65,20,22,19,66,20,22,19,66,20,1505,338,87,19,3621,338,87,19,3791",
    "2_tv_tv_vcr" => "338,171,20,22,19,23,19,23,19,23,19,23,19,23,19,66,19,23,19,66,19,66,20,65,20,65,20,65,20,65,20,22,20,65,20,64,20,65,20,65,20,64,20,22,20,22,20,22,20,22,20,22,19,23,19,23,19,23,19,65,20,65,20,65,20,65,20,1505,338,87,19,3791",
    "2_tv_volume_down" => "37914|337,172,19,23,19,23,19,65,19,24,19,23,19,24,19,23,19,23,19,65,19,65,19,23,19,66,19,66,19,65,19,66,19,65,20,65,19,65,19,23,19,23,19,23,19,23,19,24,19,23,19,23,19,23,19,66,19,65,19,66,19,65,19,66,19,66,19,1506,338,87,19,3621,338,87,19,3791",
    "2_tv_volume_up" => "37914|338,171,20,23,19,23,19,66,19,23,19,23,19,24,19,23,19,23,19,66,19,65,20,22,19,66,19,65,20,65,19,66,19,66,19,23,20,65,20,23,20,22,20,22,20,22,20,22,20,22,19,65,20,22,19,66,19,66,19,65,20,65,19,66,20,65,20,1505,338,87,19,3621,338,87,19,3621,338,87,19,3791",
    "2_tv_volume_mute" => "43360|339,195,20,26,20,26,20,74,20,26,19,27,19,27,19,27,19,27,19,75,19,75,20,26,19,75,19,75,20,75,19,75,19,75,20,74,20,26,20,26,19,75,20,26,20,26,19,27,19,26,20,26,20,74,20,74,19,27,19,75,20,74,20,74,20,74,20,1722,338,100,19,4141,338,99,19,4336",
    //"tv_mute" => "338,171,19,23,19,23,19,23,19,23,19,23,19,23,19,65,20,22,19,65,20,65,20,65,20,65,20,65,20,65,20,22,20,64,20,23,19,23,20,22,20,23,19,65,20,22,20,22,20,22,19,66,20,65,20,65,20,65,20,22,20,65,20,65,20,64,20,1505,338,87,19,3791",
    
    '0_tv_pip_on_off' => '38343|343,172,21,22,21,22,21,22,21,22,21,22,21,22,21,22,21,22,21,65,21,65,21,22,21,65,21,22,21,65,21,22,21,22,21,22,21,65,21,22,21,22,21,22,21,22,21,22,21,65,21,65,21,22,21,65,21,65,21,65,21,65,21,65,21,22,21,4907',
    '1_tv_pip_on_off' => '38343|343,172,21,22,21,22,21,22,21,22,21,22,21,22,21,22,21,22,21,65,21,65,21,22,21,65,21,22,21,65,21,22,21,22,21,22,21,65,21,22,21,22,21,22,21,22,21,22,21,65,21,65,21,22,21,65,21,65,21,65,21,65,21,65,21,22,21,4907',
    '2_tv_pip_on_off' => '38343|343,172,21,22,21,22,21,22,21,22,21,22,21,22,21,22,21,22,21,65,21,65,21,22,21,65,21,22,21,65,21,22,21,22,21,22,21,65,21,22,21,22,21,22,21,22,21,22,21,65,21,65,21,22,21,65,21,65,21,65,21,65,21,65,21,22,21,4907',
    
    '0_tv_pip_channel_swap' => '38343|343,172,21,22,21,22,21,22,21,22,21,22,21,22,21,22,21,22,21,65,21,65,21,22,21,65,21,22,21,65,21,22,21,22,21,22,21,65,21,65,21,22,21,65,21,22,21,22,21,65,21,65,21,22,21,22,21,65,21,22,21,65,21,65,21,22,21,4907',
    '1_tv_pip_channel_swap' => '38343|343,172,21,22,21,22,21,22,21,22,21,22,21,22,21,22,21,22,21,65,21,65,21,22,21,65,21,22,21,65,21,22,21,22,21,22,21,65,21,65,21,22,21,65,21,22,21,22,21,65,21,65,21,22,21,22,21,65,21,22,21,65,21,65,21,22,21,4907',
    '2_tv_pip_channel_swap' => '38343|343,172,21,22,21,22,21,22,21,22,21,22,21,22,21,22,21,22,21,65,21,65,21,22,21,65,21,22,21,65,21,22,21,22,21,22,21,65,21,65,21,22,21,65,21,22,21,22,21,65,21,65,21,22,21,22,21,65,21,22,21,65,21,65,21,22,21,4907',
    
  );

}

/*
  function curl_post_async($url, $params){
    $post_string = json_encode($params);
    $fp = fsockopen('192.168.1.70',80,$errno, $errstr, 30);
    print $errno . "::::" . $post_string;
    $out = "POST /api/v1/irports/1/sendir HTTP/1.1\r\n";
    $out.= "Host: 192.168.1.70\r\n";
    $out.= "Content-Length: ".strlen($post_string)."\r\n";
    $out.= "Connection: Close\r\n\r\n";
    $out.= $post_string;
    fwrite($fp, $out);
    fclose($fp);
}


  static function post($put_url, $put_data = array()) {

    if (is_array($put_url)) {
      $ch = curl_multi_init();
    } else {
      $ch = curl_init();
    }



    if (is_array($put_url)) {
      $curl_connections = array();
      foreach ($put_url as $url => $data) {
        $json_body = json_encode($data);
        $curl_connections[$url] = curl_init();
        curl_setopt($curl_connections[$url], CURLOPT_URL, $url);
        curl_setopt($curl_connections[$url], CURLOPT_POSTFIELDS, $json_body);

        curl_setopt($curl_connections[$url], CURLOPT_CONNECTTIMEOUT, self::$timeout);
        curl_setopt($curl_connections[$url], CURLOPT_RETURNTRANSFER, 1);
        curl_setopt($curl_connections[$url], CURLOPT_HEADER, 0);
        //curl_setopt($curl_connections[$url], CURLOPT_CUSTOMREQUEST, "PUT");
        curl_setopt($curl_connections[$url], CURLOPT_POST, 1);



        curl_multi_add_handle($ch, $curl_connections[$url]);
      }
    } else {
      curl_setopt($ch, CURLOPT_CONNECTTIMEOUT, self::$timeout);
      curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
      curl_setopt($ch, CURLOPT_HEADER, 0);
      //curl_setopt($curl_connections[$url], CURLOPT_CUSTOMREQUEST, "PUT");
      curl_setopt($ch, CURLOPT_POST, 1);
      $json_body = json_encode($put_data);
      curl_setopt($ch, CURLOPT_URL, $put_url);
      curl_setopt($ch, CURLOPT_POSTFIELDS, $json_body);
    }

    // execute the handles
    if (is_array($put_url)) {
      $running = null;
      do {
        curl_multi_exec($ch, $running);
        curl_multi_select($ch);
        usleep(80);
      } while ($running > 0);

      // get content and remove handles
      foreach ($curl_connections as $id => $c) {
        $r[$id] = curl_multi_getcontent($c);
        curl_multi_remove_handle($ch, $c);
      }
    } else {
      $r = curl_exec($ch);
    }



    if (is_array($put_url)) {
      curl_multi_close($ch);
    } else {
      curl_close($ch);
    }

    return $r;
  }

  static function put($put_url, $put_data = array()) {

    if (is_array($put_url)) {
      $ch = curl_multi_init();
    } else {
      $ch = curl_init();
    }



    if (is_array($put_url)) {
      $curl_connections = array();
      foreach ($put_url as $url => $data) {
        $json_body = json_encode($data);
        $curl_connections[$url] = curl_init();
        curl_setopt($curl_connections[$url], CURLOPT_URL, $url);
        curl_setopt($curl_connections[$url], CURLOPT_POSTFIELDS, $json_body);

        curl_setopt($curl_connections[$url], CURLOPT_CONNECTTIMEOUT, self::$timeout);
        curl_setopt($curl_connections[$url], CURLOPT_RETURNTRANSFER, 1);
        curl_setopt($curl_connections[$url], CURLOPT_HEADER, 0);
        curl_setopt($curl_connections[$url], CURLOPT_CUSTOMREQUEST, "PUT");




        curl_multi_add_handle($ch, $curl_connections[$url]);
      }
    } else {
      curl_setopt($ch, CURLOPT_CONNECTTIMEOUT, self::$timeout);
      curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
      curl_setopt($ch, CURLOPT_HEADER, 0);
      curl_setopt($ch, CURLOPT_CUSTOMREQUEST, "PUT");

      $json_body = json_encode($put_data);
      curl_setopt($ch, CURLOPT_URL, $put_url);
      curl_setopt($ch, CURLOPT_POSTFIELDS, $json_body);
    }

    // execute the handles
    if (is_array($put_url)) {
      $running = null;
      do {
        curl_multi_exec($ch, $running);
        curl_multi_select($ch);
        usleep(80);
      } while ($running > 0);

      // get content and remove handles
      foreach ($curl_connections as $id => $c) {
        $r[$id] = curl_multi_getcontent($c);
        curl_multi_remove_handle($ch, $c);
      }
    } else {
      $r = curl_exec($ch);
    }



    if (is_array($put_url)) {
      curl_multi_close($ch);
    } else {
      curl_close($ch);
    }

    return $r;
  }

  static function get($url) {
    $ch = curl_init();
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
    curl_setopt($ch, CURLOPT_CONNECTTIMEOUT, self::$timeout);
    curl_setopt($ch, CURLOPT_URL, $url);

    $r = curl_exec($ch);
    curl_close($ch);
    return $r;
  }

  static function delete($url) {
    $ch = curl_init();
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
    curl_setopt($ch, CURLOPT_CONNECTTIMEOUT, self::$timeout);
    curl_setopt($ch, CURLOPT_URL, $url);
    curl_setopt($ch, CURLOPT_CUSTOMREQUEST, "DELETE");

    $r = curl_exec($ch);
    curl_close($ch);
    return $r;
  }
 * 
 */